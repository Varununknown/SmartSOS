#include <TinyGPS.h>
#include <SoftwareSerial.h>
#include <Wire.h>
// Define SoftwareSerial for SIM 7670 GSM Module
SoftwareSerial gsm(2, 3); // TX → Pin 10, RX → Pin 11

// Define Pins
#define callbutton 5
#define smsbutton 4
TinyGPS gps;
 char phone_no[] = "+918217283848";
void setup() {
  // Initialize Serial Monitor and GSM Module
  Serial.begin(9600);
  gsm.begin(9600);

  // Initialize SOS Button
  pinMode(callbutton, INPUT_PULLUP);
  pinMode(smsbutton, INPUT_PULLUP);
  // Wait for GSM Module to initialize
  Serial.println("Initializing GSM Module...");
  delay(5000); // Allow module to stabilize
  Serial.println("GSM Ready.");
}

void loop() {
     bool newData = false;
  unsigned long chars;
  unsigned short sentences, failed;

  for (unsigned long start = millis(); millis() - start < 1000;) {
    while (Serial.available()) {
      char c = Serial.read();
      Serial.print(c);  // Output GPS data to the Serial Monitor
      if (gps.encode(c))
        newData = true;  // Check if there is new GPS data
    }
  }


  
  // Check if SOS button is pressed
  if (digitalRead(callbutton) == LOW) {
    Serial.println("SOS Button Pressed! Making Emergency Call...");
    makeEmergencyCall();
    delay(100); // Prevent multiple calls in a short time
  }
  delay(10);

   if (digitalRead(smsbutton) == LOW) {
    Serial.println("SOS Button Pressed! sending  Emergency location...");
    sendsms();
    delay(100); // Prevent multiple calls in a short time
  }
  delay(10);
}

void makeEmergencyCall() {
  gsm.println("ATD+918217283848;"); // Replace with emergency contact number
  delay(1000);
  Serial.println("Calling Emergency Number...");
}

void sendsms()
{
      float flat, flon;
      unsigned long age;
      gps.f_get_position(&flat, &flon, &age);
  
      gsm.print("AT+CMGF=1\r");
      delay(400);
      gsm.print("AT+CMGS=\"");
      gsm.print(phone_no);
      gsm.println("\"");
      gsm.println("Alert I Need help...");
      gsm.print("http://maps.google.com/maps?q=loc:");
      gsm.print(flat == TinyGPS::GPS_INVALID_F_ANGLE ? 0.0 : flat, 6);
      gsm.print(",");
      gsm.print(flon == TinyGPS::GPS_INVALID_F_ANGLE ? 0.0 : flon, 6);
      delay(200);
      gsm.println((char)26);
      delay(200);
}
